## Add default security headers
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;         # header to tell the browser not to load http
#add_header X-Content-Type-Options "nosniff" always;
#add_header X-Frame-Options SAMEORIGIN always;
#add_header X-XSS-Protection "1; mode=block" always;





## Applying rate limiting zones: limit_req_zone <rate_limit_key> zone=<zone_name>:<zone_size> rate=<requests_per_time> [burst=<req_number> [nodelay]];
#   - <rate_limit_key> could be applied by $server_name(server), $binary_remote_addr(user), $request_uri(req uri), ...
#   - <zone_size> may be adjusted
#   - rate is the average number of request to respond inside a timeframe
#   - [burst] specifies a number of requests to not reject directly when overlaping rate limit occurs, instead they will have to wait and will be handled respecting the rate limit
#   - nodelay allows [burst] to respond excessive requests immediatly

limit_req_zone $server_name zone=GENERAL:20m rate=5r/s;                             # useful to handle traffic spikes applied to server
limit_req zone=GENERAL burst=10 nodelay;
#limit_req_zone $request_uri zone=FRONTEND:10m rate=20r/s;                          # useful for front end, making excessive requests wait for rate limit reset
#limit_req zone=FRONTEND burst=10;
